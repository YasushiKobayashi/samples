name: js Test workflow
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write

env:
  NODE_ENV: test
  TEST_ARTIFACTS: /tmp/artifacts
  LAUNCHABLE_TOKEN: ${{ secrets.LAUNCHABLE_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: Kesin11/actions-timeline@v2
      - run: mkdir -p $TEST_ARTIFACTS
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4.4.0
        with:
          node-version-file: '.node-version'
      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install launchable command
        run: |
          pip install launchable
      - name: record build
        run: launchable record build --name ${GITHUB_RUN_ID}


      - run: bun install
      - run: bun run lint-ts
      # - run: bun run lint-md
      # - run: bun run lint-sass
      - run: bun run vitest-ci
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - run: bun run type-check
      - name: Publish to Chromatic
        uses: chromaui/action@v11
        # Chromatic GitHub Action options
        with:
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: src/next-sample

      - name: launchable record tests
        run: launchable record tests jest src/**/junit.xml
        if: always()
        continue-on-error: true

      - name: Enable auto-merge for Dependabot PRs
        if: ${{contains(steps.metadata.outputs.dependency-names, 'my-dependency') && steps.metadata.outputs.update-type == 'version-update:semver-patch'}}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4.4.0
        with:
          node-version-file: '.node-version'
      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2

      - run: bun install
      - run: bun playwright install

      - name: serve
        run: bun run dev &
        working-directory: src/next-sample
      - name: e2e
        run: bun run e2e-chromium
        working-directory: src/playwright-sample
      - run: bun run lerna run --stream --parallel cp-artifacts
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-artifacts
          path: /tmp/artifacts
